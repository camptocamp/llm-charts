# TODO Add missing comments
nameOverride: chat-ui

fullnameOverride: ""

namespaceOverride: ""

instanceLabelOverride: ""

global:
  # -- Number of old deployment ReplicaSets to retain. The rest will be garbage collected.
  revisionHistoryLimit: 3

  # -- If defined, a imagePullPolicy applied to all Argo CD deployments.
  imagePullPolicy: IfNotPresent

  # -- Secrets with credentials to pull images from a private registry.
  imagePullSecrets: []

  # -- Common labels for the all resources.
  additionalLabels: {}
    # app: chat-ui

  # -- Labels for the all deployed Deployments.
  deploymentLabels: {}

  # -- Labels for the all deployed pods.
  podLabels: {}

  # -- Annotations for the all deployed Deployments.
  deploymentAnnotations: {}

  # -- Annotations for the all deployed Pods.
  podAnnotations: {}

  # -- Toggle and define pod-level security context.
  # @default -- `{}` (See [values.yaml])
  securityContext: {}
  #  runAsUser: 999
  #  runAsGroup: 999
  #  fsGroup: 999

  # -- Mapping between IP and hostnames that will be injected as entries in the pod's hosts files.
  hostAliases: []
  # - ip: 10.20.30.40
  #   hostnames:
  #   - git.myhostname

  # -- Node selector for all resources. If both nodeSelector and affinity are set, they must both match for the pod to be scheduled onto a node.
  nodeSelector: {}

  # -- Affinity for all resources. If both nodeSelector and affinity are set, they must both match for the pod to be scheduled onto a node.
  affinity: {}

  # -- Tolerations for all resources.
  tolerations: []

  # -- Deployment strategy for the all deployed Deployments.
  deploymentStrategy: {}
    # type: RollingUpdate
    # rollingUpdate:
    #   maxSurge: 25%
    #   maxUnavailable: 25%

chatui:
  name: chat-ui

  image:
    repository: ghcr.io/huggingface/chat-ui
    # tag: sha-d7b02af
    imagePullPolicy: IfNotPresent

  extraEnv: []

  deploymentLabels: {}

  podLabels: {}

  deploymentAnnotations: {}

  podAnnotations: {}

  resources: {}
    # requests:
    #   cpu: 100m
    #   memory: 2Gi
    # limits:
    #   # Recommended to use large limits when web search is enabled
    #   cpu: "4"
    #   memory: 6Gi

  tolerations: []

  nodeSelector: {}

  affinity: {}

  deploymentStrategy: {}

  # TODO
  replicas: 1

  # TODO
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetMemoryUtilizationPercentage: ""
    targetCPUUtilizationPercentage: ""

  # TODO
  metrics:
    enabled: false

  ingress:
    # -- Enable an ingress resource for the ChatUI server.
    enabled: false
    # -- Additional ingress labels.
    labels: {}
    # -- Additional ingress annotations.
    annotations: {}
      # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      # nginx.ingress.kubernetes.io/ssl-passthrough: "true"

    # -- Defines which ingress controller will implement the resource.
    ingressClassName: ""

    # -- Server hostname.
    # @default -- `""`
    hostname: ""

    # -- Path to ChatUI server.
    path: /

    # -- Ingress path type. One of `Exact`, `Prefix` or `ImplementationSpecific`.
    pathType: Prefix

    # -- Enable TLS configuration for the hostname defined at `chatui.ingress.hostname`
    ## TLS certificate will be retrieved from a TLS secret `chatui-tls`
    ## You can create this secret via `certificate` or `certificateSecret` option
    tls: false

    # -- List of additional hostnames to be covered by the ingress record.
    # @default -- `[]` (See [values.yaml])
    extraHosts: []
      # - name: chat-ui.example.com
      #   path: /

    # -- Additional ingress paths.
    # @default -- `[]` (See [values.yaml])
    ## Note: Supports use of custom Helm templates.
    extraPaths: []
      # - path: /*
      #   pathType: Prefix
      #   backend:
      #     service:
      #       name: ssl-redirect
      #       port:
      #         name: use-annotation

    # -- Additional ingress rules.
    # @default -- `[]` (See [values.yaml])
    ## Note: Supports use of custom Helm templates.
    extraRules: []
      # - http:
      #     paths:
      #     - path: /
      #       pathType: Prefix
      #       backend:
      #         service:
      #           name: '{{ include "chat-ui.fullname" . }}'
      #           port:
      #             name: '{{ .Values.chat-ui.service.servicePortHttpsName }}' # TODO We do not yet have these values

    # -- Additional TLS configuration.
    # @default -- `[]` (See [values.yaml])
    extraTls: []
      # - hosts:
      #   - chat-ui.example.com
      #   secretName: your-certificate-name

  # -- Name of the MongoDB database used by ChatUI.
  # @default -- `chat-ui`
  ## If you change this value, you must also change the `databaseName` in the MongoDB secret init job or provide a
  ## secret for the MongoDB URL that contains the same database name.
  mongodbName: chat-ui

  # -- Secret containing the MongoDB URL. If not set, defaults to the secret created by the MongoDB secret init job.
  mongodbUrl:
    secretName: ""
    secretKey: MONGODB_URL

  huggingFaceToken:
    secretName: hugging-face-token
    secretKey: token

    # -- Configuration for the ChatUI models in JSON format.
  ## This can be configured following the examples available in the official documentation.
  ## Ref: https://huggingface.co/docs/chat-ui/configuration/models/overview
  models: >
    [
      {
        "name": "mistralai/Mistral-7B-Instruct-v0.1",
        "displayName": "mistralai/Mistral-7B-Instruct-v0.1",
        "description": "Mistral 7B is a new Apache 2.0 model, released by Mistral AI that outperforms Llama2 13B in benchmarks.",
        "websiteUrl": "https://mistral.ai/news/announcing-mistral-7b/",
        "preprompt": "",
        "chatPromptTemplate" : "<s>{{#each messages}}{{#ifUser}}[INST] {{#if @first}}{{#if @root.preprompt}}{{@root.preprompt}}\n{{/if}}{{/if}}{{content}} [/INST]{{/ifUser}}{{#ifAssistant}}{{content}}</s>{{/ifAssistant}}{{/each}}",
        "parameters": {
          "temperature": 0.1,
          "top_p": 0.95,
          "repetition_penalty": 1.2,
          "top_k": 50,
          "truncate": 3072,
          "max_new_tokens": 1024,
          "stop": ["</s>"]
        },
        "promptExamples": [
          {
            "title": "Write an email from a bullet list",
            "prompt": "As a restaurant owner, write a professional email to the supplier to get these products every week: \n\n- Wine (x10)\n- Eggs (x24)\n- Bread (x12)"
          }, {
            "title": "Code a snake game in Python",
            "prompt": "Code a basic snake game in Python, giving explanations for each step."
          }, {
            "title": "Write a recipe",
            "prompt": "How do I make a delicious lemon cheesecake?"
          }
        ]
      }
    ]

  # TODO
  oidc:
    secretName: ""
    secretKey: OPENID_CONFIG 

# TODO
networkPolicy:
  enabled: false

mongodbSecretInit:
  # -- Enable an init job to create a secret containing credentials to access the MongoDB database. If disabled, the secret must be created another way.
  enabled: true
  
  name: "mongodb-secret-init"

  image:
    repository: ""
    tag: ""
    imagePullPolicy: IfNotPresent

  # -- Override the default command for the init job. If not set, a default command will be used to create the secret.
  commandOverride: []
  # - bash
  # - -c
  # - >-
  #   your command here

  podLabels: {}

  podAnnotations: {}
  
  jobAnnotations: {}

  resources: {}

  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

  tolerations: []

  nodeSelector: {}

  affinity: {}

  # -- Name to use for the MongoDB database.
  # @default -- `chat-ui`
  ## This value has no effect if you override the default command for the init job using `commandOverride`.
  mongodbName: chat-ui

  # -- Username for to use for the MongoDB username.
  mongodbUsername: chat-ui

# -- Configuration values for the MongoDB Helm chart used as a dependency.
mongodb:
  enabled: true

  # -- Deployment mode for MongoDB. This can be standalone or replicaset. WARNING: replicaset mode is not supported by our chart.
  architecture: standalone
  useStatefulSet: true

  service:
    nameOverride: chat-ui-mongodb

  auth:
    enabled: true
    databases: ["chat-ui"] # This must match the database name used in the init job.
    usernames: ["chat-ui"] # This must match the username used in the init job.
    existingSecret: mongodb-init-secret

  persistence:
    size: 16Gi

  # TODO Add support for TLS traffic, maybe with a self-signed certificate.
  # tls:
  #   enabled: true
  #   autoGenerated: true
  #   mTLS:
  #     enabled: false

  # TODO
  metrics:
    enabled: false
